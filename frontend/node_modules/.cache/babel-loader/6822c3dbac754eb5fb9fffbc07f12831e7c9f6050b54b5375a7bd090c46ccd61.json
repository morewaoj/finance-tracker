{"ast":null,"code":"import axios from'axios';import{API_URL}from'./config';const API=axios.create({baseURL:API_URL,headers:{'Content-Type':'application/json'}});// Request interceptor\nAPI.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor\nAPI.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401||((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===403){// Handle authentication errors\nlocalStorage.removeItem('token');window.location.href='/login';}return Promise.reject(error);});// Add data validation helper\nconst validateTransactionData=data=>{if(!data.description||!data.category_id||!data.amount){throw new Error('Missing required fields: description, category_id, and amount are required');}return{description:data.description.trim(),amount:parseFloat(data.amount)||0,category_id:parseInt(data.category_id,10),type:data.type||'expense'};};// API endpoints\nexport const auth={login:credentials=>API.post('/auth/login',credentials),register:userData=>API.post('/auth/register',userData),logout:()=>API.post('/auth/logout')};export const transactions={getAll:()=>API.get('/transactions'),create:data=>{const validatedData=validateTransactionData(data);return API.post('/transactions',validatedData);},update:(id,data)=>{const validatedData=validateTransactionData(data);return API.put(`/transactions/${id}`,validatedData);},delete:id=>API.delete(`/transactions/${id}`)};export default API;","map":{"version":3,"names":["axios","API_URL","API","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","status","removeItem","window","location","href","validateTransactionData","data","description","category_id","amount","Error","trim","parseFloat","parseInt","type","auth","login","credentials","post","register","userData","logout","transactions","getAll","get","validatedData","update","id","put","delete"],"sources":["/Users/morewaomolabi/Downloads/financetracker/finance-tracker/frontend/src/api/api.js"],"sourcesContent":["import axios from 'axios';\nimport { API_URL } from './config';\n\nconst API = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\nAPI.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\nAPI.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401 || error.response?.status === 403) {\n      // Handle authentication errors\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Add data validation helper\nconst validateTransactionData = (data) => {\n  if (!data.description || !data.category_id || !data.amount) {\n    throw new Error('Missing required fields: description, category_id, and amount are required');\n  }\n\n  return {\n    description: data.description.trim(),\n    amount: parseFloat(data.amount) || 0,\n    category_id: parseInt(data.category_id, 10),\n    type: data.type || 'expense'\n  };\n};\n\n// API endpoints\nexport const auth = {\n  login: (credentials) => API.post('/auth/login', credentials),\n  register: (userData) => API.post('/auth/register', userData),\n  logout: () => API.post('/auth/logout')\n};\n\nexport const transactions = {\n  getAll: () => API.get('/transactions'),\n  create: (data) => {\n    const validatedData = validateTransactionData(data);\n    return API.post('/transactions', validatedData);\n  },\n  update: (id, data) => {\n    const validatedData = validateTransactionData(data);\n    return API.put(`/transactions/${id}`, validatedData);\n  },\n  delete: (id) => API.delete(`/transactions/${id}`)\n};\n\nexport default API;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}